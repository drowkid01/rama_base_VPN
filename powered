#!/bin/bash
negro="\e[1;30m" && azul="\e[1;34m" && verde="\e[1;32m" && cian="\e[1;36m" && rojo="\e[1;31m" && purpura="\e[1;35m" && amarillo="\e[1;33m" && blanco="\e[1;37m" && function lin(){ echo -e "${rojo}════════════════════════════════════════════════════" ; } && function lin2(){ echo -e "${rojo}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" ; }
function texto(){
case $1 in
 -cr)echo -e "${rojo}$2${sn}" ;;
 -cv)echo -e "${verde}$2${sn}" ;;
 -cc)echo -e "${cian}$2${sn}" ;;
 -cp)echo -e "${purpura}$2${sn}" ;;
 -ca)echo -e "${azul}$2${sn}" ;;
 -cA)echo -e "${amarillo}$2${sn}" ;;
 -cb)echo -e "${blanco}$2${sn}" ;;
 -cn)echo -e "\e[1;30m$2\e[0m" ;;
esac
}
ufal_gen() {
 comando="$1"
  _=$(
    $comando >/dev/null 2>&1
  ) &
  >/dev/null
  pid=$!
  while [[ -d /proc/$pid ]]; do
    echo -ne "  \033[1;33m["
    for ((i = 0; i < 40; i++)); do
      echo -ne "\033[1;31m>"
      sleep 0.1
    done
    echo -ne "\033[1;33m]"
    sleep 1s
    echo
    tput cuu1 && tput dl1
  done
  echo -ne "  \033[1;33m[\033[1;31m>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\033[1;33m] - \033[1;32m OK \033[0m\n"
  sleep 1s
}
ufal_dep() {
    comando="$1"
    _=$(
        $comando >/dev/null 2>&1
    ) &
    >/dev/null
    pid=$!
    while [[ -d /proc/$pid ]]; do
        echo -ne "  \033[1;33m["
        for ((i = 0; i < 20; i++)); do
            echo -ne "\033[1;31m>"
            sleep 0.08
        done
        echo -ne "\033[1;33m]"
        sleep 0.5s
        echo
        tput cuu1 && tput dl1
    done
    [[ $(dpkg --get-selections | grep -w "$paquete" | head -1) ]] || ESTATUS=$(echo -e "\033[91m  FALLO DE INSTALACION") &>/dev/null
    [[ $(dpkg --get-selections | grep -w "$paquete" | head -1) ]] && ESTATUS=$(echo -e "\033[1;33m       \033[92mINSTALADO") &>/dev/null
    echo -ne "  \033[1;33m[\033[1;31m>>>>>>>>>>>>>>>>>>>>\033[1;33m] $ESTATUS \033[0m\n"
    sleep 0.5s
}
menu(){
  local options=${#@}
  local array
  for((num=1; num<=$options; num++)); do
    echo -ne "$(texto -amarillo "[\e[1;32m$num\e[1;33m]") $(texto -rojo "➤➤") "
    array=(${!num})
    case ${array[0]} in
      "-vd")echo -e "\033[1;33m[!]\033[1;32m ${array[@]:1}";;
      "-vm")echo -e "\033[1;33m[!]\033[1;31m ${array[@]:1}";;
      "-fi")echo -e "${array[@]:2} ${array[1]}";;
      -bar|-bar2|-bar3|-bar4)echo -e "\033[1;37m${array[@]:1}\n$(msg ${array[0]})";;
      *)echo -e "\033[1;37m${array[@]}";;
    esac
  done
 }

 instalacion(){
  link="gist.githubusercontent.com/hostingADV/1c3778a1c2b8ab038fc0f6df4da51dec/raw/eb029c67585f00077ee634947ca9f945abf1980e"
  list="BotGen.sh back_ID costes id latam_key menu reinicio ShellBot.sh cache donar invalido link myip status ayuda comandos gerar_key kill_drop.sh listID power update"
   for i $list; do
     wget https://${link}/$i
   done
 }
 dependencias(){
  packg="curl python python2 python3 ufw figlet apache2 screen"
  for i in $packg; do
    lin
    ufal_dep "apt-get install $i -y"
  done
 }
 reposis(){
 if [ ! -e '/etc/ADM-db' ]; then
 mkdir -p /etc/ADM-db
 mkdir -p /etc/ADM-db/sources
 cd /etc/ADM-db/sources && instalacion
 cp BotGen.sh ~/../etc/ADM-db
 chmod +x * && cd .. && chmod +x *
 clear && clear && lin
 read -p "INGRESE SU ID: " id
 read -p "INGRESE SU TOKEN: " token
 echo "${id}" >Admin-ID
 echo "${token}">token
 chmod +x * && lin
 read -p "DESEA ACTIVAR EL BOT? " x
   [[ $x = @(s|S|y|Y|si|yes) ]] && echo -e "INICIAREMOS EL BOT, PUEDES CERRAR LA VPS DESPUES DE ESTE PROCESO" && screen ./BotGen.sh -start && echo -e "\e[1;32mBOT INICIADO" || echo -e "\e[1;31mIP SIN AUTORIZACIÓN!\n CONTACTAR A @drowkid01 PARA USAR EL BOTKEY"
 fi
 }
if [ ! -e './ufal_dep' ]; then
wget https://raw.githubusercontent.com/drowkid01/modcg/main/ufal_dep
chmod +x ufal_dep
./ufal_dep
fi
apt-get update -y
apt-get upgrade -y
clear && clear
wget -qO- ipv4.icanhazip.com > Control-BOT && mv Control-BOT ~/../var/www/html
lin
echo -e "\e[1;33m 	I N S T A L A N D O  B O T K E Y "
dependencias
reposis
echo -e "\e[1;32m[✓] BOT INSTALADO [✓]"
rm $(pwd)/powered
reboot
